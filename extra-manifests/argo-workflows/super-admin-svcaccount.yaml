---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-admin
  namespace: argo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-admin
rules:
  # Full access to all Argo Workflows CRDs
  - apiGroups: ["argoproj.io"]
    resources: ["*"]
    verbs: ["*"]

  # Full access to core Kubernetes resources (needed for workflow pods, configmaps, secrets, etc.)
  - apiGroups: [""]
    resources:
      - pods
      - pods/log
      - pods/exec
      - services
      - configmaps
      - secrets
      - persistentvolumeclaims
      - events
    verbs: ["*"]

  # Allow managing Jobs, CronJobs, etc. used by Argo
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["*"]

  # Allow manipulating custom resources needed by workflow templates, sensors, etc.
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "replicasets"]
    verbs: ["*"]

  # General access to coordination and RBAC resources (for advanced integrations)
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["*"]

  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-admin
subjects:
  - kind: ServiceAccount
    name: argo-admin
    namespace: argo
